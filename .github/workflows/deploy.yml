name: 🚀 Deploy Spinza.io Smart Contract

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'devnet'
        type: choice
        options:
        - devnet
        - mainnet-beta

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🦀 Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        
    - name: ⚡ Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v1.18.0/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        # Verify installation
        $HOME/.local/share/solana/install/active_release/bin/solana --version
        
    - name: ⚓ Install Anchor CLI
      run: |
        npm install -g @coral-xyz/anchor-cli@0.30.0
        anchor --version
        
    - name: 🔑 Setup Solana Keypair
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        mkdir -p ~/.config/solana
        echo '${{ secrets.SOLANA_PRIVATE_KEY }}' > ~/.config/solana/id.json
        chmod 600 ~/.config/solana/id.json
        $HOME/.local/share/solana/install/active_release/bin/solana config set --url ${{ github.event.inputs.environment || 'devnet' }}
        echo "Using cluster: $($HOME/.local/share/solana/install/active_release/bin/solana config get | grep 'RPC URL')"
        
    - name: 💰 Check and Fund Wallet
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        echo "Wallet address: $($HOME/.local/share/solana/install/active_release/bin/solana address)"
        echo "Current balance: $($HOME/.local/share/solana/install/active_release/bin/solana balance)"
        
        if [ "${{ github.event.inputs.environment || 'devnet' }}" = "devnet" ]; then
          echo "Requesting airdrop for devnet..."
          $HOME/.local/share/solana/install/active_release/bin/solana airdrop 2 || echo "Airdrop failed, continuing with existing balance"
          sleep 5
          echo "Balance after airdrop: $($HOME/.local/share/solana/install/active_release/bin/solana balance)"
        else
          echo "Mainnet deployment - ensure wallet has sufficient SOL"
        fi
        
    - name: 🔨 Build Smart Contract
      run: |
        echo "Building Spinza smart contract..."
        anchor build
        echo "Build completed successfully!"
        
    - name: 🚀 Deploy Smart Contract
      run: |
        echo "Deploying to ${{ github.event.inputs.environment || 'devnet' }}..."
        anchor deploy --provider.cluster ${{ github.event.inputs.environment || 'devnet' }}
        echo "Deployment completed!"
        
    - name: 📊 Verify Deployment
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        PROGRAM_ID=$(anchor keys list | grep spinza | awk '{print $2}')
        echo "✅ Smart Contract Deployed Successfully!"
        echo "📍 Program ID: $PROGRAM_ID"
        echo "🌐 Network: ${{ github.event.inputs.environment || 'devnet' }}"
        echo "💰 Remaining balance: $($HOME/.local/share/solana/install/active_release/bin/solana balance)"
        
        $HOME/.local/share/solana/install/active_release/bin/solana program show $PROGRAM_ID
        
    - name: 🎯 Initialize Game State
      run: |
        echo "Initializing game state..."
        cd scripts
        npm install
        node initialize.js
        echo "Game state initialized successfully!"
        
    - name: 📋 Deployment Summary
      run: |
        PROGRAM_ID=$(anchor keys list | grep spinza | awk '{print $2}')
        echo "🎉 DEPLOYMENT COMPLETE!"
        echo "=================================="
        echo "📍 Program ID: $PROGRAM_ID"
        echo "🌐 Network: ${{ github.event.inputs.environment || 'devnet' }}"
        echo "👑 Operator Wallet: E7Y3q3gNA8DKGrXydpCnv4cTQnbkzM1wx3maHqJDv7n6"
        echo "💰 Min Bet: 0.1 SOL"
        echo "💰 Max Bet: 100 SOL"
        echo "👥 Max Players: 50"
        echo "💼 Commission: 10%"
        echo "=================================="
        
        echo "PROGRAM_ID=$PROGRAM_ID" > deployment_info.txt
        echo "NETWORK=${{ github.event.inputs.environment || 'devnet' }}" >> deployment_info.txt
        
    - name: 📤 Upload Deployment Info
      uses: actions/upload-artifact@v4
      with:
        name: deployment-info
        path: |
          deployment_info.txt
          target/idl/spinza.json
