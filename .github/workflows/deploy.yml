name: ðŸš€ Deploy Spinza.io Smart Contract

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'devnet'
        type: choice
        options:
        - devnet
        - mainnet-beta

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸ“¥ Checkout code
      uses: actions/checkout@v4
      
    - name: ðŸ¦€ Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.75.0
        profile: minimal
        override: true
        
    - name: ðŸ§¹ Clean Cargo State
      run: |
        echo "Cleaning any problematic Cargo files..."
        rm -f Cargo.lock
        rm -f programs/spinza/Cargo.lock
        rm -rf target/
        echo "âœ… Cleaned successfully!"
        
    - name: âš¡ Install Solana CLI
      run: |
        echo "Installing Solana CLI..."
        cd /tmp
        wget https://github.com/solana-labs/solana/releases/download/v1.18.0/solana-release-x86_64-unknown-linux-gnu.tar.bz2
        tar -xjf solana-release-x86_64-unknown-linux-gnu.tar.bz2
        mkdir -p ~/.local/share/solana/install/active_release
        cp -r solana-release/* ~/.local/share/solana/install/active_release/
        chmod +x ~/.local/share/solana/install/active_release/bin/*
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        ~/.local/share/solana/install/active_release/bin/solana --version
        
    - name: âš“ Install Anchor CLI
      run: |
        npm install -g @coral-xyz/anchor-cli@0.30.0
        anchor --version
        
    - name: ðŸ”‘ Setup Solana Keypair
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        mkdir -p ~/.config/solana
        echo '${{ secrets.SOLANA_PRIVATE_KEY }}' > ~/.config/solana/id.json
        chmod 600 ~/.config/solana/id.json
        ~/.local/share/solana/install/active_release/bin/solana config set --url ${{ github.event.inputs.environment || 'devnet' }}
        
    - name: ðŸ’° Fund Wallet
      run: |
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        echo "Wallet: $(~/.local/share/solana/install/active_release/bin/solana address)"
        echo "Balance: $(~/.local/share/solana/install/active_release/bin/solana balance)"
        if [ "${{ github.event.inputs.environment || 'devnet' }}" = "devnet" ]; then
          ~/.local/share/solana/install/active_release/bin/solana airdrop 2 || echo "Airdrop failed"
          sleep 5
        fi
        
    - name: ðŸ”¨ Build Smart Contract
      run: |
        echo "Building contract..."
        rustup update
        CARGO_NET_GIT_FETCH_WITH_CLI=true anchor build --release
        
    - name: ðŸš€ Deploy Smart Contract
      run: |
        echo "Deploying..."
        anchor deploy --provider.cluster ${{ github.event.inputs.environment || 'devnet' }}
        
    - name: ðŸ“Š Get Program ID
      run: |
        PROGRAM_ID=$(anchor keys list | grep spinza | awk '{print $2}')
        echo "ðŸŽ‰ SUCCESS! Program ID: $PROGRAM_ID"
        echo "PROGRAM_ID=$PROGRAM_ID" > deployment_info.txt
        
    - name: ðŸŽ¯ Initialize Game
      run: |
        cd scripts
        npm install
        node initialize.js
        
    - name: ðŸ“¤ Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: deployment-info
        path: deployment_info.txt
